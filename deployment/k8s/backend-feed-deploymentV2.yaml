apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    service: backend-feed
  name: backend-feed
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 1
  template:
    metadata:
      labels:
        service: backend-feed
    spec:
      containers:
      - image: techie3/inventory-feed:2.0
        name: backend-feed
        imagePullPolicy: Always
        #readinessProbe:
        #  periodSeconds: 30
        #  initialDelaySeconds: 300
        #  timeoutSeconds: 10
        #  successThreshold: 1
        #  failureThreshold: 5
        #  httpGet:
        #    path: /
        #    port: 8080
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"                  
        env:
        - name: URL
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: URL
        - name: AWS_INV_MEDIA_BUCKET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_INV_MEDIA_BUCKET
        - name: AWS_PROFILE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_PROFILE
        - name: AWS_REGION
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_REGION
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: JWT_SECRET
        - name: POSTGRESS_INV_DATABASE
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRESS_INV_DATABASE
        - name: POSTGRESS_INV_HOST
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRESS_INV_HOST
        - name: POSTGRESS_INV_PASSWORD
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRESS_INV_PASSWORD
        - name: POSTGRESS_INV_USERNAME
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRESS_INV_USERNAME
        volumeMounts:
        - name: aws-secret
          mountPath: "/root/.aws/"
          readOnly: true        
      restartPolicy: Always
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret